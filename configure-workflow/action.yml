run: |
  # Artifactory
  ARTIFACTORY_BASE="https://trialt6dmgx.jfrog.io"
  ARTIFACTORY_BASE_URL="${ARTIFACTORY_BASE}/artifactory"
  echo "DEBUG: ARTIFACTORY_BASE_URL=${ARTIFACTORY_BASE_URL}"
  echo "artifactory-base=${ARTIFACTORY_BASE}" >> "$GITHUB_OUTPUT"
  echo "artifactory-username=$ARTIFACTORY_USERNAME" >> "$GITHUB_OUTPUT"
  echo "artifactory-api-key=$ARTIFACTORY_API_KEY" >> "$GITHUB_OUTPUT"
  
  # Debian
  DEBIAN_REPO_URL="${ARTIFACTORY_BASE_URL}/${TEAM}-debian-dev"
  echo "DEBUG: DEBIAN_REPO_URL=${DEBIAN_REPO_URL}"
  echo "debian-repository-url=${DEBIAN_REPO_URL}" >> "$GITHUB_OUTPUT"

  # Docker
  DOCKER_SNAPSHOT_IMAGE_BASE="$ARTIFACTORY_BASE/$TEAM-docker-snapshot-local/$DOCKER_NAMESPACE/$APPLICATION_NAME"
  DOCKER_RELEASE_IMAGE_BASE="$ARTIFACTORY_BASE/$TEAM-docker-release-local/$DOCKER_NAMESPACE/$APPLICATION_NAME"
  DOCKER_REGISTRY="$ARTIFACTORY_BASE/$TEAM-docker-dev"
  echo "DEBUG: DOCKER_SNAPSHOT_IMAGE_BASE=${DOCKER_SNAPSHOT_IMAGE_BASE}"
  echo "DEBUG: DOCKER_RELEASE_IMAGE_BASE=${DOCKER_RELEASE_IMAGE_BASE}"
  echo "DEBUG: DOCKER_REGISTRY=${DOCKER_REGISTRY}"
  echo "docker-snapshot-image-base=$DOCKER_SNAPSHOT_IMAGE_BASE" >> $GITHUB_OUTPUT
  echo "docker-release-image-base=$DOCKER_RELEASE_IMAGE_BASE" >> $GITHUB_OUTPUT
  echo "docker-registry=$DOCKER_REGISTRY" >> $GITHUB_OUTPUT

  # Helm
  HELM_REPOSITORY_URL="$ARTIFACTORY_BASE_URL/$TEAM-helm-dev"
  echo "DEBUG: HELM_REPOSITORY_URL=${HELM_REPOSITORY_URL}"
  echo "helm-repository-url=$HELM_REPOSITORY_URL" >> $GITHUB_OUTPUT

  # Maven
  MAVEN_SNAPSHOT_URL="$ARTIFACTORY_BASE_URL/$TEAM-maven-snapshot-local/"
  MAVEN_RELEASE_URL="$ARTIFACTORY_BASE_URL/$TEAM-maven-release-local/"
  MAVEN_MIRROR_URL="$ARTIFACTORY_BASE_URL/$TEAM-maven-dev"
  echo "DEBUG: MAVEN_SNAPSHOT_URL=${MAVEN_SNAPSHOT_URL}"
  echo "DEBUG: MAVEN_RELEASE_URL=${MAVEN_RELEASE_URL}"
  echo "DEBUG: MAVEN_MIRROR_URL=${MAVEN_MIRROR_URL}"
  echo "maven-snapshot-url=$MAVEN_SNAPSHOT_URL" >> $GITHUB_OUTPUT
  echo "maven-release-url=$MAVEN_RELEASE_URL" >> $GITHUB_OUTPUT
  echo "maven-mirror-url=$MAVEN_MIRROR_URL" >> $GITHUB_OUTPUT

  # Handle GIT_REF for Docker tags
  case $GITHUB_EVENT_NAME in
    pull_request)
      GIT_REF=$GITHUB_BASE_REF
      echo "DEBUG: Pull request detected, GIT_REF=${GIT_REF}"
      ;;
    *)
      case $GITHUB_REF in
        refs/tags/v*)
          GIT_REF=${GITHUB_REF#refs/tags/v}
          echo "DEBUG: Tag reference detected, GIT_REF=${GIT_REF}"
          ;;
        refs/heads/*)
          GIT_REF=${GITHUB_REF#refs/heads/}
          echo "DEBUG: Branch reference detected, GIT_REF=${GIT_REF}"
          ;;
        *)
          echo "ERROR: Unhandled GITHUB_REF=$GITHUB_REF, exiting"
          exit 1
          ;;
      esac
      ;;
  esac

  # Docker Tags
  DOCKER_REF_TAG="${GIT_REF//[\/]/-}"
  echo "DEBUG: DOCKER_REF_TAG=${DOCKER_REF_TAG}"
  DOCKER_SHA_TAG="${GITHUB_SHA:0:7}"
  echo "DEBUG: DOCKER_SHA_TAG=${DOCKER_SHA_TAG}"
  DOCKER_BUILD_TAG="$DOCKER_REF_TAG-$DOCKER_SHA_TAG-$(date +%Y%m%d)-$GITHUB_RUN_NUMBER"
  echo "DEBUG: DOCKER_BUILD_TAG=${DOCKER_BUILD_TAG}"
  echo "docker-ref-tag=$DOCKER_REF_TAG" >> $GITHUB_OUTPUT
  echo "docker-sha-tag=$DOCKER_SHA_TAG" >> $GITHUB_OUTPUT
  echo "docker-build-tag=$DOCKER_BUILD_TAG" >> $GITHUB_OUTPUT
